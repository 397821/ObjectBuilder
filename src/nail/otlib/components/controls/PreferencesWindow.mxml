<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////////
// 
//  Copyright (c) 2014 <nailsonnego@gmail.com>
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//
///////////////////////////////////////////////////////////////////////////////////
-->

<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:nail="library://ns.nail.com/naillib"
		  width="400"
		  height="300"
		  minimizable="false"
		  maximizable="false"
		  resizable="false"
		  showStatusBar="false"
		  backgroundColor="0x494949"
		  fontSize="11"
		  title="@Resource(key='menu.preferences', bundle='obstrings')"
		  creationComplete="creationCompleteHandler(event)">
	
	<s:layout>
		<s:VerticalLayout gap="10"
						  horizontalAlign="center"/>
	</s:layout>
	
	<fx:Metadata>
		[ResourceBundle("strings")]
		[ResourceBundle("obstrings")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import nail.objectbuilder.settings.ObjectBuilderSettings;
			import nail.objectbuilder.utils.SupportedLanguages;
			
			//--------------------------------------------------------------------------
			//
			// PROPERTIES
			//
			//--------------------------------------------------------------------------
			
			[Bindable]
			private var _settings : ObjectBuilderSettings;
			private var _settingsChanged : Boolean;
			
			//--------------------------------------------------------------------------
			//
			// METHODS
			//
			//--------------------------------------------------------------------------
			
			//--------------------------------------
			// Protected
			//--------------------------------------
			
			override protected function commitProperties() : void
			{
				super.commitProperties();
				
				if (_settingsChanged)
				{
					setSettings(_settings);
					_settingsChanged = false;
				}
			}
			
			//--------------------------------------
			// Private
			//--------------------------------------
			
			private function setSettings(settings:ObjectBuilderSettings) : void
			{
				setLanguage(settings.language);
			}
			
			private function setLanguage(language:String) : void
			{
				switch(language)
				{
					case SupportedLanguages.PL_PL:
						languageDropDownList.selectedIndex = 1;
						break;
					
					case SupportedLanguages.PT_BR:
						languageDropDownList.selectedIndex = 2;
						break;
					
					default:
						languageDropDownList.selectedIndex = 0;
						break;
				}
			}
			
			private function getLanguage() : String
			{
				switch(languageDropDownList.selectedIndex)
				{
					case 1:
						return SupportedLanguages.PL_PL
						
					case 2:
						return SupportedLanguages.PT_BR
				}
				return SupportedLanguages.EN_US;
			}
			
			//--------------------------------------
			// Event Handlers
			//--------------------------------------
			
			protected function creationCompleteHandler(event:FlexEvent) : void
			{
				focusManager.setFocus(cancelButton);
				focusManager.showFocus();
			}
			
			protected function confirmButtonClickHandler(event:MouseEvent) : void
			{
				_settings.language = getLanguage();
				close();
			}
			
			//--------------------------------------
			// Getters / Setters
			//--------------------------------------
			
			public function get settings() : ObjectBuilderSettings
			{
				return _settings;
			}

			public function set settings(value:ObjectBuilderSettings) : void
			{
				if (_settings != value)
				{
					_settings = value;
					_settingsChanged = true;
					invalidateProperties();
				}
			}
			
		]]>
	</fx:Script>
	
	<nail:TabNavigator width="100%"
					 height="100%">
		<s:NavigatorContent label="@Resource(key='general', bundle='obstrings')"
							width="100%"
							height="100%">
			<s:Rect width="100%"
					height="100%">
				<s:fill>
					<s:SolidColor color="0x494949"/>
				</s:fill>
			</s:Rect>
			
			<nail:GroupBox left="10"
						   right="10"
						   top="10"
						   label="@Resource(key='language', bundle='obstrings')">
				<nail:layout>
					<s:VerticalLayout gap="10"
									  paddingLeft="10"
									  paddingRight="10"
									  paddingTop="10"
									  paddingBottom="10"/>
				</nail:layout>
				<s:DropDownList id="languageDropDownList"
								width="100%"
								selectedIndex="0">
					<s:dataProvider>
						<s:ArrayList>
							<fx:String>English</fx:String>
							<fx:String>Polski</fx:String>
							<fx:String>PortuguÃªs</fx:String>
						</s:ArrayList>
					</s:dataProvider>
				</s:DropDownList>
				<s:Label text="@Resource(key='needToRestart', bundle='obstrings')"
						 width="100%"
						 textAlign="right"
						 color="0xAAAAAA"/>
			</nail:GroupBox>
		</s:NavigatorContent>
	</nail:TabNavigator>
	
	<s:HGroup width="100%"
			  paddingLeft="10"
			  paddingRight="10"
			  paddingBottom="10"
			  verticalAlign="middle"
			  horizontalAlign="right">
		<s:Button id="confirmButton"
				  label="@Resource(key='confirm', bundle='strings')"
				  enabled="{_settings != null}"
				  minWidth="70"
				  click="confirmButtonClickHandler(event)"/>
		<s:Button id="cancelButton"
				  label="@Resource(key='cancel', bundle='strings')"
				  minWidth="70"
				  click="close()"/>
	</s:HGroup>
</s:Window>
