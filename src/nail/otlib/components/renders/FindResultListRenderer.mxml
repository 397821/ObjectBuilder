<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////////
// 
//  Copyright (c) 2014 <nailsonnego@gmail.com>
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//
///////////////////////////////////////////////////////////////////////////////////
-->

<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				minHeight="38"
				dataChange="dataChangeHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import nail.otlib.things.ThingType;
			import nail.otlib.utils.ThingListItem;
			
			//--------------------------------------------------------------------------
			//
			// METHODS
			//
			//--------------------------------------------------------------------------
			
			//--------------------------------------
			// Event Handlers
			//--------------------------------------
			
			protected function dataChangeHandler(event:FlexEvent) : void
			{
				var listItem : ThingListItem;
				var thing : ThingType;
				var bitmap : BitmapData;
				
				listItem = data as ThingListItem;
				if (listItem != null)
				{
					thing = listItem.thing;
					if (!isNullOrEmpty(thing.marketName))
					{
						displayLabel.text = thing.id + " - " + thing.marketName;
					}
					else
					{
						displayLabel.text = thing.id.toString();
					}
					
					try
					{
						bitmap = listItem.getBitmap();
					} 
					catch(error:Error)
					{
						trace(error.getStackTrace());
					}
					
					image.source = bitmap;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="0x272727" weight="0.1"/>
		</s:stroke>
	</s:Rect>
	
	<s:HGroup width="100%"
			  height="100%"
			  paddingLeft="3"
			  paddingRight="3"
			  paddingTop="3"
			  paddingBottom="3"
			  verticalAlign="middle">
		<s:Image id="image"/>
		<s:Label id="displayLabel"
				 fontSize="11"/>
	</s:HGroup>
</s:ItemRenderer>
